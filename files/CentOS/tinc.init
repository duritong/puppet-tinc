#!/bin/bash
#
# tinc centos startup script.
#
# chkconfig: 35 40 60
# description: tinc offers vpn services
# processname: puppetmaster

DAEMON="/usr/sbin/tincd"
NAME="tinc"
DESC="tinc daemons"
TCONF="/etc/tinc"
NETSFILE="$TCONF/nets.boot"
LOCKFILE=/var/lock/subsys/tincd
RETVAL=0

# Source function library.
. /etc/rc.d/init.d/functions

# pull in sysconfig settings
[ -f /etc/sysconfig/tinc ] && . /etc/sysconfig/tinc

find_nets() {
  if [ ! -f $NETSFILE ] ; then
    echo "Please create $NETSFILE."
    exit 0
  fi
  NETS="`egrep '^[ ]*[a-zA-Z0-9_-]+[ ]*$' $NETSFILE`"
}

start() {
  ## Activate the server daemon
  find_nets
  echo -n "Launching $NAME server:"
  for n in $NETS ; do
    echo -n " $n"
    $DAEMON -n $n $EXTRA
    ret=$?; [ $ret != 0 ] && RETVAL=$ret
  done
  [ $RETVAL = 0 ] && touch $LOCKFILE
  return $RETVAL
}
stop() {
  find_nets
  echo -n "Stopping $DESC:"
  for n in $NETS ; do
    echo -n " $n"
    $DAEMON -n $n $EXTRA -k
    ret=$?; [ $ret != 0 ] && RETVAL=$ret
  done
  [ $RETVAL = 0 ] && rm -f $LOCKFILE
  return $RETVAL
}
reload() {
  find_nets
  echo -n "Reloading $DESC configuration:"
  for n in $NETS ; do
    echo -n " $n"
    $DAEMON -n $n $EXTRA -kHUP
    ret=$?; [ $ret != 0 ] && RETVAL=$ret 
  done
  return $RETVAL
}
restart() {
  find_nets
  echo -n "Restarting $DESC:"
  for n in $NETS ; do
    echo -n " $n"
    $DAEMON -n $n $EXTRA -k
    sleep 1
    $DAEMON -n $n $EXTRA
    ret=$?; [ $ret != 0 ] && RETVAL=$ret
  done
  return $RETVAL
}
rh_status(){
  find_nets
  for n in $NETS; do
    status -p /var/run/tinc.${n}.pid $DAEMON
    ret=$?; [ $ret != 0 ] && RETVAL=$ret
  done
  return $RETVAL
}
# See how we were called.
case "$1" in
  start)
  start
  ;;
  stop)
  stop
  ;;
  reload|force-reload)
  reload
  ;;
  restart)
  restart
  ;;
  status)
  rh_status
  ;;
  *)
  echo $"Usage: /sbin/service $NAME {start|stop|reload|restart|force-reload|status}"
  exit 1
esac
exit $RETVAL

